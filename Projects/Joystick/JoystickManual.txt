1) Чтобы использовать модуль джойстика надо импортировать его:
    import RTCjoystic

2) Чтобы оперировать с джойстиком и вспомогательными методами, нужно создать элемент класса Джойстика:
    J = RTCjoystic.Joystick()

3) Чтобы подключиться к джойстику, нужно вызвать метод connect, с параметром пути до джойстика:
    J.connect("/dev/input/js0")

4) Чтобы получить всю информацию о джойстике, !!!(доступных кнопках и осях, а также их имена)!!!, нухно вызвать функцию info:
    J.info()

5) Чтобы джойстик начал работать, нужно запустить его:
    J.start()

6) Получение данных с оси:
    J.Axis.get('z')
Axis - свойство класса Joystick(возвращает словарь с текущим состоянием всех осей)
Axis.get(name) - получение текущее состояние оси, c именем name, из словаря Axis, причем, если такой оси нет, то вернется значение None

7) Получение данных с кнопки(Крайне не рекомендуется проверять состояние кнопки в цикле, т.к. можно не заметить изменение ее положения, для этого есть обработчики):
    J.Buttons.get('trigger')
Все точно также, как и в получении данных с оси

8) Обработчики нажатия кнопок:
    def hand():
        print("IT'S ALIVE!!!")
    J.connectButton('thumb', hand)
Подключает функцию hand к кнопке с именем thumb, теперь при нажатии этой кнопки будет вызываться hand

9) Выход из потока джойстика:
    J.exit()

Исключения:
1. JoyCrashError - крашнулся джойстик
2. JoyNotFoundError - такого джойстика нет
3. InternalError - внутренняя ошибка
4. ButtonError - ошибка связанная с обработкой кнопок
Пример работы в файле testJoy.py


